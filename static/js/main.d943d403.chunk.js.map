{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","window","addEventListener","e","setState","key","infoMessage","this","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,uDAKE,WAAqB,IAAD,OAClBC,OAAOC,iBAAiB,SAAS,SAACC,GAChC,EAAKC,SAAS,CAAEJ,WAAYG,EAAEE,WAPpC,oBAWE,WACE,IAEMC,EAFiBC,KAAKR,MAApBC,WAEsB,mCACEO,KAAKR,MAAMC,WADb,KAE1B,0BAEJ,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BF,UApBrC,GAAyBG,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d943d403.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  pressedKey: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    window.addEventListener('keyup', (e: KeyboardEvent) => {\n      this.setState({ pressedKey: e.key });\n    });\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n\n    const infoMessage = pressedKey\n      ? `The last pressed key is [${this.state.pressedKey}]`\n      : 'Nothing was pressed yet';\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{infoMessage}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}